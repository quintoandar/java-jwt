package br.com.quintoandar.javajwt

import org.jose4j.jwt.consumer.InvalidJwtException
import spock.lang.Shared
import spock.lang.Specification

class QuintoAndarKeycloakJwtSpec extends Specification {

  @Shared
  def keycloakPublicKeyServiceMock = Mock(QuintoAndarKeycloakPublicKeyService)

  @Shared
  def keycloakSubject = GroovySpy(QuintoAndarKeycloakJwtBean)

  @Shared
  def fakePublicKey2048bit = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AM\n" +
      "IIBCgKCAQEA6A+CGRKw/xpaAqy/1eJlf5urRzmUWhgGVNedUhmgMudMBQIXPYVOW\n" +
      "QQydWq/e+SaxdT7fRQE/Ae0eOCPgwtyFmLoA/ugGT0AGF5juXBzCwXY9iLdIejQP\n" +
      "DbbVVMICFteRCDkLaLZy4U3qj895TzZHg7gXwo4l3oi4EUT6MchMANGw4D4/SIZc\n" +
      "dzm9R/pV9+AHYaA1k8YP612YXFe4W39ZPXuQrz/Lnys7MgPo/NSpKmxMp82el/vV\n" +
      "W9wlQKA4fY/zz7GgfsUf25hVpnCC8V6b1kIU+5TfYSjTThHfSqI8aDIXohIiQu3K\n" +
      "ISNXqJV4Tx+PMqeQkKT0GIaqKM+b4jPWQIDAQAB"

  @Shared
  def fakePrivateKey2048bit = "-----BEGIN PRIVATE KEY-----\n" +
      "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDoD4IZErD/GloC\n" +
      "rL/V4mV/m6tHOZRaGAZU151SGaAy50wFAhc9hU5ZBDJ1ar975JrF1Pt9FAT8B7R4\n" +
      "4I+DC3IWYugD+6AZPQAYXmO5cHMLBdj2It0h6NA8NttVUwgIW15EIOQtotnLhTeq\n" +
      "Pz3lPNkeDuBfCjiXeiLgRRPoxyEwA0bDgPj9Ihlx3Ob1H+lX34AdhoDWTxg/rXZh\n" +
      "cV7hbf1k9e5CvP8ufKzsyA+j81KkqbEynzZ6X+9Vb3CVAoDh9j/PPsaB+xR/bmFW\n" +
      "mcILxXpvWQhT7lN9hKNNOEd9KojxoMheiEiJC7cohI1eolXhPH48yp5CQpPQYhqo\n" +
      "oz5viM9ZAgMBAAECggEBAMteW+tRQCAwndVeQzhUEhNE/1OKGILkLxhHZS3AG27A\n" +
      "2RRCgs99de35CadxB6Kx8xmQz10MIFom/ng4hEyZyT/pKd/jsqirltvETK0E6S0t\n" +
      "0LfUUesXtvYuNQWPoKiCOhiGorGD2E7Nzry6c6nkK3p2GxfvQy0s8keNAier61/A\n" +
      "tAuY+vCQUdCV8v3KFy6edKSj7T0e94kNNYi+lTPLq28f0LfhjFT0DhfWI49wh1Vq\n" +
      "Tn61bAX0wI0pyc5OIdMMoLQ37aez9iwHCRvYFCuYpaHleNaQ3FpxLaoPrSCQxGyT\n" +
      "R1MQq51Bbh+MJI7DXO8TJw5ZVoX86tCStR0XdqcGnCkCgYEA9/rO8u2cCNYAxRPk\n" +
      "n3VHZpmYq9Gvrbq+TbfJxgODCS9kJYAgwN1aeSzhO4nustrHT/B4jLSlR82Qi66Z\n" +
      "+oaVXWygk5XVdLPMmO2rabDWsQWSWxBli1ez8DAflM+CFm9y1hKxMJiPbC8alZea\n" +
      "fheiLjOMKElf94mBfobkeUEEmOMCgYEA75Dk/GY2Xel67f08g7X6cI+z4QMtedWd\n" +
      "5BL63AujBEdZNobazhSDQmoiKqoBhwGertiskNmYpJ21uzA0FrSaO6AUx/5jTgNc\n" +
      "TCwg2J6gXl+XOKJZ4xTu4ALImFyG4SZ5/QBKBrLs+dacOAnj7WvWvnaWph0rhzR/\n" +
      "ZdWBUHO295MCgYBEJ26RXbSwyQBVKe5/1N/W1wga0PqTqOt8uLJ/9Z8h+yBvHhPi\n" +
      "bfPbsfYFQxeTmIWG9vRq14tFfL3pZgdzz2Fl1+EaLugHtxLYRRoDZlLbPEjJNmxy\n" +
      "K5yMuu0zHQUH3YGWTHTegk+I0DliO9R+K0irogc3W1NA2U351GEe4ju9OQKBgQC6\n" +
      "27ugG2GgkrKt2u5OlazIC250vfPEqhhDg4JkDDeU6MnvO/SC9YEEVqBbwsr6MQtC\n" +
      "ugKv4OmszM6pOQoIA8qhY1WSQRvYB8sAJxNfoyrXMZxUMl4GP5eq5sDsBo+2IjrY\n" +
      "WldjLkClBv5Gv4Am+gw/92O+IdaH2Szdk1EQHZHDPQKBgGx3aAvS68WwA1smzI0Y\n" +
      "i9zSBlBtqWX3ISAD20c/Oy5jK7YJEn307KqOXYpSNj6D544MffaZvMPafc/6zXmc\n" +
      "OhyX9yMqdsl3SpJ8HsCD70eBIbS3kIttPb0rMXP/hyX/v/DL3GW0jr4vH9ThkYKQ\n" +
      "Q23FiefzA2cYDohWY25jrl4f\n" +
      "-----END PRIVATE KEY-----"

  /**
   * header: {
   *   "alg": "RS256",
   *   "typ": "JWT"
   * },
   * payload: {
   *   "id": 7,
   *   "name": "James Bond",
   *   "email": "james.bond@quintoandar.com.br",
   *   "role": "admin"
   * }
   *
   * (generated by https://jwt.io/)
   */
  @Shared
  def fakeJwt = "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywibmFtZSI6IkphbWVzIEJvbmQiLCJlbWFpbCI6ImphbWVzLmJvbmRAcXVpbnRvYW5kYXIuY29tLmJyIiwicm9sZSI6ImFkbWluIn0.piI9eOSM06yfh9Lzy8O0iUW18mIGql7vSIEjWYrm6pbZCQNV-7LxU12PXO2ZdH-zqbv7VVtkJvuO3pseACKYzsukXbswb9Rc_v77UaqMj4QGXHTJfoniL0mFAMxcqJcJVgmS2mE03gKh62y_BA8Emh2Gbal-44grYPn2HOG7nNjGa799SKtvqSG2beilEnXXURidH5QNA7kWXIkLfVbRgMjTmu8axQUHa98dP95Hopnn2-6CJGtpPyZUqT9df76_r8B2oMY4N6pJJWo-ik8y7DAV8WyJVsLQTj_1rzHLGxtMT7aXEEtAufGovgBc7qV1Vgu4VhsoIpqQEqnby5m7jQ"

  def setupSpec() {
    keycloakPublicKeyServiceMock.fetchKeycloakPublicKey() >> fakePublicKey2048bit
    keycloakSubject.quintoAndarKeycloakPublicKeyService = keycloakPublicKeyServiceMock
  }

  def "get payload from valid Keycloak jwt"() {
    when:
    def result = keycloakSubject.getPayload(fakeJwt)

    then:
    result.isPresent()

    and:
    def claims = result.get()
    claims.get("id") == 7
    claims.get("name") == "James Bond"
    claims.get("email") == "james.bond@quintoandar.com.br"
    claims.get("role") == "admin"
  }

  def "get payload from invalid Keycloak jwt throws exception"() {
    given:
    def jwtForOtherKeys = "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NywibmFtZSI6IkphbWVzIEJvbmQiLCJlbWFpbCI6Imphb" +
        "WVzLmJvbmRAcXVpbnRvYW5kYXIuY29tLmJyIiwicm9sZSI6ImFkbWluIn0.fwuOMtnmdKV7QeesDPWIsK-5Ipanv9PHPenzUWg5EOXG639z9" +
        "9EzEFn3Fcy-cBTqEPrzm1JorhfVvfABOEZaz7Kocv058lcUSnTQhVgAhu9GVo5CaQmPg6gDKBkndQ0n4wu-pW_c-q3AKr5auJW8gxs9AoJRH" +
        "1c5gQ-ablFJrOX4m2z17j81Aa-t8wM0jfbASJcu6omHaX5C4BLL7IzbYRUhE47lje3_D7SeXpciGPomI8Hl8hOo4dQpO8bZgO_uSTHDfTsoE" +
        "1ypOaXe8A5VVr1YDRpxlcBHvbxymCR0uJmeq2HCuAPyoN97KQHLrw5ehJ5TyLKTCDTm1aSjnl1O0g"

    when:
    def result = keycloakSubject.getPayload(jwtForOtherKeys)

    then:
    thrown(InvalidJwtException)
  }

}
